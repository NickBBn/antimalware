//
// Created by niickson on 7/5/21.
//

#include "antimalware_client.hpp"

antimalware_client::antimalware_client() {}

std::string antimalware_client::request() {
    nlohmann::json req;
    std::cout << "Enter directory name: ";
    std::string input;
    std::cin >> input;
    req["directory"] = input;
    return req.dump();
}

void antimalware_client::parse_response(const std::string &response, std::ostream& out) {
    nlohmann::json res;
    try {
        res = nlohmann::json::parse(response);
    } catch (const nlohmann::detail::parse_error &e) {
        throw std::runtime_error("Not json response");
    }
    if (res.contains("error")){
        out << res["error"] << std::endl;
    } else {
        out << "=========== SCAN RESULT ============ " << std::endl
            << res["directory"] << " scanned" << std::endl
            << "Processed files: " << res["files_count"] << std::endl
            << "JS detects: " << res["js_detects"] << std::endl
            << "Unix detects: " << res["unix_detects"] << std::endl
            << "macOS detects: " << res["macos_detects"] << std::endl
            << "Errors: " << res["file_errors"] << std::endl
            << "Execution time: " << res["microsec_time"]
            << " microseconds" << std::endl
            << "==================================== " << std::endl
            << std::endl;
    }
}
